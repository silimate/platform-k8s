# Deployment of the containers as a pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silimate-platform-k8s-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      initContainers:
        - name: flow-init
          image: silimate-flow
          imagePullPolicy: Never
          env:
            - name: DB_HOSTNAME
              value: localhost
          volumeMounts:
            - name: share
              mountPath: /app/share
          command: [bash, -c, cd /app/share && rm -rf steps flows && git clone https://github.com/silimate/steps && git clone https://github.com/silimate/flows && cd - && psql `echo $DATABASE_URL | sed "s/localhost/$DB_HOSTNAME/"` -f dbinit.sql]
      containers:
        - name: frontend
          image: silimate-platform-frontend
          imagePullPolicy: Never
        - name: dashboard
          image: silimate-dashboard
          imagePullPolicy: Never
          env:
            - name: GF_DATABASE_HOST
              value: localhost:5432
        - name: backend
          image: silimate-platform-backend
          imagePullPolicy: Never
          env:
            - name: DB_HOSTNAME
              value: localhost
          volumeMounts:
            - name: share
              mountPath: /app/share
        - name: flow-scheduler
          image: silimate-flow
          imagePullPolicy: Never
          env:
            - name: DB_HOSTNAME
              value: localhost
          command: [bash, -c, export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=`echo $DATABASE_URL | sed "s/localhost/$DB_HOSTNAME/"` && airflow standalone]
          volumeMounts:
            - name: share
              mountPath: /app/share
        - name: flow-webserver
          image: silimate-flow
          imagePullPolicy: Never
          env:
            - name: DB_HOSTNAME
              value: localhost
          command: [bash, -c, export AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=`echo $DATABASE_URL | sed "s/localhost/$DB_HOSTNAME/"` && airflow scheduler]
          volumeMounts:
            - name: share
              mountPath: /app/share
      volumes:
        - name: share
          persistentVolumeClaim:
            claimName: share-claim
