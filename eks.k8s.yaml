# Deployment of the containers as a pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silimate-platform-k8s-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      initContainers:
        - name: backend-init
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-flow:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: flows
              mountPath: /app/flows
          command: [mv, /app/flowrepo/*, /app/flows/]
      containers:
        - name: postgres
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-db:latest
          imagePullPolicy: Always
        - name: frontend
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-frontend:latest
          imagePullPolicy: Always
        - name: nginx
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-nginx:latest
          imagePullPolicy: Always
        - name: dashboard
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-dashboard:latest
          imagePullPolicy: Always
        - name: backend
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-backend:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: flows
              mountPath: /app/flows
        - name: flow
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-flow:latest
          imagePullPolicy: Always
          command: ["sh", "-c", "airflow db init && airflow webserver"]
          volumeMounts:
            - name: flows
              mountPath: /app/flows
      volumes:
        - name: flows
          emptyDir: {}
---
# Load balancer to expose the service
apiVersion: v1
kind: Service
metadata:
  name: silimate-platform-service
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: web
  ports:
    - port: 80
      targetPort: 80
