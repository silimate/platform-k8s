# Deployment of the containers as a pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silimate-platform-k8s-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: postgres
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-db:latest
          imagePullPolicy: Always
        - name: frontend
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-frontend:latest
          imagePullPolicy: Always
        - name: nginx
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-nginx:latest
          imagePullPolicy: Always
        - name: dashboard
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-dashboard:latest
          imagePullPolicy: Always
        - name: backend
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-platform-backend:latest
          imagePullPolicy: Always
        - name: flow
          image: 596912105783.dkr.ecr.us-west-1.amazonaws.com/silimate-flow:latest
          imagePullPolicy: Always
          command: ["sh", "-c", "airflow db init && airflow webserver"]
      volumes:
        - name: workdir
          emptyDir: {}
      dnsPolicy: Default
---
# Load balancer to expose the service
apiVersion: v1
kind: Service
metadata:
  name: silimate-platform-entrypoint
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: web
  ports:
    - port: 80
      targetPort: 80
---
# Config map to give AWS root user access to the cluster
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-auth
  namespace: kube-system
data:
  mapUsers: |
    - groups:
      - system:masters
      userarn: arn:aws:iam::596912105783:root
